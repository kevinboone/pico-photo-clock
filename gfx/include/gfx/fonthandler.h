/*============================================================================
 *
 *  gfx/fonthandler.h
 *
 *  An object for rendering font glyphs. The font data is generated using the
 *    makefont.pl script.
 *
 *  For a description of how this font generation and rendering works, see:
 *  https://kevinboone.me/im-font-test.html
 *
 * Copyright (c)2023 Kevin Boone, GPL v3.0
 *
 * ==========================================================================*/
#pragma once

#include <stdint.h>

struct _FontHandler;
typedef struct _FontHandler FontHandler;

#ifdef __cplusplus
extern "C" {
#endif

/** Create a fonthandler instance, passing the font arrays in the 
      autogenerated font files. Note that '95' is the number of 
      printable ASCII characters (including space). */
extern FontHandler *fonthandler_new (unsigned char *font_data[95], 
                      unsigned int *font_length[95], unsigned int font_width, 
                      unsigned int font_height);

extern void fonthandler_destroy (FontHandler *self);

/** Generate a glyph for the specified character, which must be in the
      range 32-126. The return value is a link to an internal buffer, 
      and the caller must not free or modify it. The data returns is
      an array of 8-bit unsigned intensity values. */
extern const unsigned char *fonthandler_get_glyph (FontHandler *self, int c);

/** As fonthandler_get_glyph, but returns an array of 16-bit RGB565 values, 
      suitable for transferring directly to an RGB565 display panel. */ 
extern const uint16_t *fonthandler_get_glyph_565 (FontHandler *self, int c);

extern unsigned int fonthandler_get_font_height (const FontHandler *self);
extern unsigned int fonthandler_get_font_width (const FontHandler *self);

#ifdef __cplusplus
}
#endif


